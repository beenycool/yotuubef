# Environment Variables Configuration Template
# Copy this file to .env and fill in your actual credentials

# Reddit API Credentials
# Get these from https://www.reddit.com/prefs/apps
REDDIT_CLIENT_ID="your_reddit_client_id_here"
REDDIT_CLIENT_SECRET="your_reddit_client_secret_here"
REDDIT_USER_AGENT="python:VideoBot:v2.0 (by /u/YOUR_REDDIT_USERNAME)"

# Google/YouTube API Credentials
# Download client_secret_*.json from Google Cloud Console
GOOGLE_CLIENT_SECRETS_FILE="client_secret_your_project.apps.googleusercontent.com.json"
YOUTUBE_TOKEN_FILE="youtube_token.json"

# Alternative: You can provide YouTube credentials directly in JSON format
# YOUTUBE_TOKEN_JSON='{"token": "...", "refresh_token": "...", "token_uri": "https://oauth2.googleapis.com/token", "client_id": "...", "client_secret": "...", "scopes": [...], "universe_domain": "googleapis.com", "account": "", "expiry": "..."}'

# Gemini AI API Key
# Get this from https://aistudio.google.com/app/apikey
GEMINI_API_KEY="your_gemini_api_key_here"

# Optional: Custom File Paths
# Uncomment and modify these if you want to use custom directories
# DB_FILE_PATH="uploaded_videos.db"
# WATERMARK_FILE_PATH="watermark.png"
# MUSIC_FILES_DIR="music"
# SOUND_EFFECTS_DIR="sound_effects"

# Optional: Seamless Looping Configuration
# These can be overridden via environment variables
# ENABLE_SEAMLESS_LOOPING="true"
# LOOP_CROSSFADE_DURATION="0.3"
# LOOP_COMPATIBILITY_THRESHOLD="0.3"
# LOOP_SAMPLE_DURATION="0.5"
# LOOP_TARGET_DURATION=""  # leave empty for auto-detect
# ENABLE_AUDIO_CROSSFADE="true"
# LOOP_EXTEND_MODE="middle_repeat"
# LOOP_TRIM_FROM_CENTER="true"

# Optional: Development and Testing
# ENABLE_DEBUG_MODE="false"
# MOCK_YOUTUBE_UPLOAD="false"
# MOCK_AI_ANALYSIS="false"

# Instructions:
# 1. Copy this file to .env
# 2. Replace all "your_*_here" values with your actual credentials
# 3. Download your Google client secrets file and update the path
# 4. Run auth_youtube.py to generate the YouTube token file
# 5. Configure any optional settings as needed